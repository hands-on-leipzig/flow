name: Deploy Vue + Laravel App

on:
  push:
    branches:
      - main
      - test
      - production

jobs:
  deploy-dev:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Build Vue frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Create frontend .env file
        working-directory: ./frontend
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL_DEV }}" > .env
          echo "VITE_APP_NAME=FLOW" >> .env
          echo "VITE_APP_URL=https://dev.flow.hands-on-technology.org" >> .env
          echo "VITE_FILES_BASE_URL=https://dev.flow.hands-on-technology.org" >> .env
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      # Set up PHP & Composer
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install Laravel dependencies
        working-directory: ./backend
        run: composer install --no-dev --optimize-autoloader
      - name: Copy frontend dist to Laravel public dir
        run: |
          rm -rf backend/public/build
          rm -f backend/public/index.html
          cp -r frontend/dist/* backend/public/
      - name: Copy output to Laravel public dir
        run: |
          rm -rf backend/public/output
          mkdir -p backend/public/output
          cp -r output/* backend/public/output/
          chmod +x backend/public/output/zeitplan.cgi || true
          chmod +x backend/public/output/namensschilder.cgi || true
          chmod +x backend/public/output/visibility.cgi || true
      - name: Rsync backend to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOST }}" > ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes -p 222" --delete ./backend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deploy-flow-dev-temp/
      - name: Finalize on server (move to public dir)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 222
          script: |
            rsync -av --delete \
            --exclude='.env' \
            --exclude='.htaccess' \
            --exclude='storage/' \
            ~/deploy-flow-dev-temp/ ~/public_html/flow-dev/
            cd ~/public_html/flow-dev
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan migrate --force
            php artisan storage:link

  deploy-test:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Build Vue frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Create frontend .env file
        working-directory: ./frontend
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL_TEST }}" > .env
          echo "VITE_APP_NAME=FLOW" >> .env
          echo "VITE_APP_URL=https://test.flow.hands-on-technology.org" >> .env
          echo "VITE_FILES_BASE_URL=https://test.flow.hands-on-technology.org" >> .env
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      # Set up PHP & Composer
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install Laravel dependencies
        working-directory: ./backend
        run: composer install --no-dev --optimize-autoloader
      - name: Copy frontend dist to Laravel public dir
        run: |
          rm -rf backend/public/build
          rm -f backend/public/index.html
          cp -r frontend/dist/* backend/public/
      - name: Copy output to Laravel public dir
        run: |
          rm -rf backend/public/output
          mkdir -p backend/public/output
          cp -r output/* backend/public/output/
          chmod +x backend/public/output/zeitplan.cgi || true
          chmod +x backend/public/output/namensschilder.cgi || true
          chmod +x backend/public/output/visibility.cgi || true
      - name: Rsync backend to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOST }}" > ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes -p 222" --delete ./backend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deploy-flow-test-temp/
      - name: Finalize on server (move to public dir)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 222
          script: |
            rsync -av --delete \
            --exclude='.env' \
            --exclude='.htaccess' \
            --exclude='storage/' \
            ~/deploy-flow-test-temp/ ~/public_html/flow-test/
            cd ~/public_html/flow-test
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan migrate --force
            php artisan storage:link
            # Fresh database setup for test environment
            php artisan tinker --execute="
            use Illuminate\Support\Facades\DB;
            use App\Models\MSeason;
            use App\Models\MLevel;
            use App\Models\RegionalPartner;
            use App\Models\Event;
            
            echo 'Purging test database...' . PHP_EOL;
            DB::statement('SET FOREIGN_KEY_CHECKS=0;');
            \$tables = ['activity', 'activity_group', 'event', 'event_logo', 'extra_block', 'logo', 'plan', 'plan_extra_block', 'plan_param_value', 'regional_partner', 'room', 'room_type_room', 'table_event', 'team', 'team_plan', 'user', 'user_regional_partner', 'slideshow', 'slide', 'publication', 's_generator', 'm_activity_type', 'm_activity_type_detail', 'm_first_program', 'm_insert_point', 'm_level', 'm_parameter', 'm_role', 'm_room_type', 'm_room_type_group', 'm_season', 'm_supported_plan', 'm_visibility'];
            foreach (\$tables as \$table) {
                if (DB::getSchemaBuilder()->hasTable(\$table)) {
                    DB::table(\$table)->truncate();
                }
            }
            DB::statement('SET FOREIGN_KEY_CHECKS=1;');
            
            echo 'Creating test data...' . PHP_EOL;
            
            // Create season if not exists
            if (DB::table('m_season')->count() == 0) {
                DB::table('m_season')->insert(['name' => 'Test Season 2024', 'year' => 2024, 'active' => 1, 'created_at' => now(), 'updated_at' => now()]);
            }
            
            // Create level if not exists
            if (DB::table('m_level')->count() == 0) {
                DB::table('m_level')->insert(['name' => 'Test Level', 'level' => 1, 'created_at' => now(), 'updated_at' => now()]);
            }
            
            \$season = DB::table('m_season')->first();
            \$level = DB::table('m_level')->first();
            
            // Create regional partners
            \$rp1 = RegionalPartner::create(['name' => 'Test Regional Partner A', 'region' => 'Test Region A', 'dolibarr_id' => 2001]);
            \$rp2 = RegionalPartner::create(['name' => 'Test Regional Partner B', 'region' => 'Test Region B', 'dolibarr_id' => 2002]);
            
            // Create test events
            Event::create(['name' => 'RPT Demo - Nur Explore', 'regional_partner' => \$rp1->id, 'season' => \$season->id, 'level' => \$level->id, 'date' => now()->addDays(30), 'days' => 1, 'slug' => 'rpt-demo-nur-explore', 'event_explore' => 1001, 'event_challenge' => null]);
            Event::create(['name' => 'RPT Demo - Nur Challenge', 'regional_partner' => \$rp1->id, 'season' => \$season->id, 'level' => \$level->id, 'date' => now()->addDays(45), 'days' => 1, 'slug' => 'rpt-demo-nur-challenge', 'event_explore' => null, 'event_challenge' => 1002]);
            Event::create(['name' => 'RPT Demo', 'regional_partner' => \$rp2->id, 'season' => \$season->id, 'level' => \$level->id, 'date' => now()->addDays(60), 'days' => 1, 'slug' => 'rpt-demo', 'event_explore' => 1003, 'event_challenge' => 1004]);
            
            echo 'Test database setup complete!' . PHP_EOL;
            "

  deploy-production:
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Build Vue frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Create frontend .env file
        working-directory: ./frontend
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL_PROD }}" > .env
          echo "VITE_APP_NAME=FLOW" >> .env
          echo "VITE_APP_URL=https://flow.hands-on-technology.org" >> .env
          echo "VITE_FILES_BASE_URL=https://flow.hands-on-technology.org" >> .env
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      # Set up PHP & Composer
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install Laravel dependencies
        working-directory: ./backend
        run: composer install --no-dev --optimize-autoloader
      - name: Copy frontend dist to Laravel public dir
        run: |
          rm -rf backend/public/build
          rm -f backend/public/index.html
          cp -r frontend/dist/* backend/public/
      - name: Copy output to Laravel public dir
        run: |
          rm -rf backend/public/output
          mkdir -p backend/public/output
          cp -r output/* backend/public/output/
          chmod +x backend/public/output/zeitplan.cgi || true
          chmod +x backend/public/output/namensschilder.cgi || true
          chmod +x backend/public/output/visibility.cgi || true
      - name: Rsync backend to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOST }}" > ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes -p 222" --delete ./backend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deploy-flow-prod-temp/
      - name: Finalize on server (move to public dir)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 222
          script: |
            rsync -av --delete \
            --exclude='.env' \
            --exclude='.htaccess' \
            --exclude='storage/' \
            ~/deploy-flow-prod-temp/ ~/public_html/flow-prod/
            cd ~/public_html/flow-prod
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan migrate --force
            php artisan storage:link
            # Refresh main tables after migration
            php artisan tinker --execute="include 'database/scripts/refresh_main_tables.php'; refreshMainTables();"